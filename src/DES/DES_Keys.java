package DES;

import javax.crypto.*;
import java.lang.reflect.Array;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;

public class DES_Keys {

    public static void main(String[] args) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException

    {
        //AutoGenerated key from Java
        KeyGenerator generator = KeyGenerator.getInstance("DES");
        SecretKey myDesKey = generator.generateKey();
        //System.out.println(myDesKey);

        //Prints out key in 8 bytes
        byte[] myBytes = myDesKey.getEncoded();
        System.out.println("Generated Key: ");
        System.out.println(Arrays.toString(myBytes));

        //Cipher class for DES
        Cipher desCipher = Cipher.getInstance("DES");

        //Set Object to Encryption
        desCipher.init(Cipher.ENCRYPT_MODE,myDesKey);
        //Translate String into byte array
        byte[] myBytes2 = "You can always see me during office hours. No appointment is required.".getBytes();

        //Encrypt the Byte array
        byte[] encryptedBytes = desCipher.doFinal(myBytes2);

        //Print encrypted Array and Text
        System.out.println();
        System.out.println("Encrypted Array: ");
        System.out.println(Arrays.toString(encryptedBytes));
        System.out.println();
        System.out.println("Encrypted Text: ");
        String s = new String(encryptedBytes);
        System.out.println(s);

        //Decrypt the bytes and reprint message
        desCipher.init(Cipher.DECRYPT_MODE, myDesKey);
        byte[] decryptedBytes = desCipher.doFinal(encryptedBytes);
        System.out.println();
        System.out.println("Decrypted Array: ");
        System.out.println(Arrays.toString(decryptedBytes));
        System.out.println();
        System.out.println("Decrypted Text: ");
        String s2 = new String(decryptedBytes);
        System.out.println(s2);





    }

}
